---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all places and filter for events
const allPlaces = await getCollection('places');
const eventRecommendations = allPlaces.filter(place => place.data.category === 'events');
---

<BaseLayout title="What's happening - My Copenhagen" description="Curated events, festivals, and cultural experiences in Copenhagen">
  <div class="max-w-5xl mx-auto px-6 py-16">
    <!-- Header -->
    <div class="text-center mb-16">
      <h1 class="text-h1 text-gray-900 mb-4">What's happening</h1>
      <p class="text-body text-gray-700 max-w-3xl mx-auto">
        Festivals, exhibitions, performances, and seasonal events that showcase Copenhagen's vibrant cultural scene.
      </p>
      <div class="w-24 h-px bg-gray-200 mx-auto mt-8"></div>
    </div>

    <!-- Events Grid -->
    <div class="grid gap-8">
      {eventRecommendations.map((event) => (
        <article class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 hover:shadow-md hover:border-gray-300 transition-all duration-200">
          <div class="flex items-start justify-between mb-6">
            <div class="flex-1">
              <h2 class="text-h2 text-gray-900 mb-3">
                <a href={`/places/${event.slug}`} class="hover:text-brand-600 transition-colors">
                  {event.data.title}
                </a>
              </h2>
            </div>
            <div class="flex items-center space-x-4 ml-6 flex-shrink-0">
              {event.data.season && (
                <span class="px-3 py-1 bg-accent-purple-500 text-white rounded-md text-body-sm font-medium">{event.data.season}</span>
              )}
            </div>
          </div>
          
          <div class="flex items-center text-body-sm text-gray-500 mb-4 space-x-1">
            <svg class="w-4 h-4 text-gray-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a1 1 0 012 0v4h4V3a1 1 0 112 0v4h1a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3v-8a3 3 0 013-3h1z"/>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 11h8M8 15h5"/>
            </svg>
            <span>{event.data.location}</span>
            {event.data.type && <span class="text-gray-300">•</span>}
            {event.data.type && <span>{event.data.type}</span>}
            {event.data.neighborhood && <span class="text-gray-300">•</span>}
            {event.data.neighborhood && <span>{event.data.neighborhood}</span>}
          </div>
          
          <p class="text-body text-gray-700 mb-6">
            {event.data.description}
          </p>
          
          {event.data.tags && event.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-6">
              {event.data.tags.map((tag: string) => (
                <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-md text-body-sm font-medium">
                  {tag}
                </span>
              ))}
            </div>
          )}
          
          <a 
            href={`/places/${event.slug}`}
            class="inline-flex items-center text-brand-600 hover:text-brand-700 transition-colors font-medium text-body"
          >
            Read more
            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
          </a>
        </article>
      ))}
    </div>
  </div>
</BaseLayout>