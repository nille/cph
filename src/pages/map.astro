---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all places that have coordinates
const allPlaces = await getCollection('places');
const mappedPlaces = allPlaces.filter(place => 
  place.data.coordinates && place.data.coordinates.includes(',')
);

// Transform places into markers for the map component
const markers = mappedPlaces.map((item) => {
  const isHome = item.slug === 'brohusgatan-20';
  const isParking = item.data.type === 'parking';
  const [lat, lng] = item.data.coordinates!.split(',').map(s => parseFloat(s.trim()));
  
  return {
    id: item.slug,
    position: [lat, lng] as [number, number],
    title: item.data.title, // For hover tooltip
    type: item.data.type,
    tags: item.data.tags || [],
    size: 'medium' as const,
    isHome: isHome,
    isParking: isParking,
    popup: {
      title: item.data.title,
      subtitle: item.data.subtitle,
      content: `${item.data.address} • ${isHome ? 'Home' : isParking ? 'Parking' : item.data.category}`,
      image: item.data.images && item.data.images.length > 0 ? item.data.images[0] : undefined,
      slug: item.slug,
      website: item.data.website,
      instagram: item.data.instagram,
      coordinates: {
        lat: lat,
        lng: lng
      }
    }
  };
});
---

<BaseLayout title="Map - My Copenhagen" description="Interactive map of all recommended places and events in Copenhagen">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 py-20">
    <!-- Header -->
    <header class="text-center mb-20">
      <h1 class="text-h1 text-gray-900 mb-6 font-serif">Interactive Map</h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed">
        Explore all my favourite places in Copenhagen. Click on any marker to learn more about each location.
      </p>
      <div class="flex items-center justify-center mt-12">
        <div class="h-px bg-gradient-to-r from-transparent via-gray-300 to-transparent w-32"></div>
        <div class="mx-6 text-[#F05340]">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
          </svg>
        </div>
        <div class="h-px bg-gradient-to-r from-transparent via-gray-300 to-transparent w-32"></div>
      </div>
    </header>

    <!-- Interactive Map -->
    <div class="relative bg-white rounded-2xl border border-gray-100 shadow-xl overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-gray-50/50 to-white/50 pointer-events-none"></div>
      <div class="relative p-6">
        <div id="leaflet-map" class="w-full h-[70vh] min-h-[600px] rounded-xl overflow-hidden shadow-lg border border-gray-200"></div>
      </div>
      
      <!-- Map Legend/Info -->
      <div class="border-t border-gray-100 px-4 sm:px-6 py-4 bg-gray-50/50">
        <div class="flex flex-wrap items-center justify-center gap-4 sm:gap-8 text-sm text-gray-600">
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-[#F05340] rounded-full"></div>
            <span>Restaurants & Cafés</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
            <span>Museums & Culture</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
            <span>Parks & Nature</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-purple-500 rounded-full"></div>
            <span>Shopping</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  import { createLeafletMap } from '../components/ui/leaflet-map';
  
  // Initialize map when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    const markers = JSON.parse(document.getElementById('map-data')?.textContent || '[]');
    
    const leafletMap = createLeafletMap('leaflet-map', {
      center: [55.6761, 12.5683],
      zoom: 12,
      enableClustering: true
    });
    
    leafletMap.addMarkers(markers);
  });
</script>

<!-- Pass markers data to client-side script -->
<script id="map-data" type="application/json" set:html={JSON.stringify(markers)}></script>

<!-- Custom styles for map tooltips -->
<style>
  .place-tooltip {
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 6px 10px;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
    border: none;
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  }
  
  .place-tooltip::before {
    border-top-color: rgba(0, 0, 0, 0.8);
  }
  
  /* Override Leaflet's default tooltip styles */
  .leaflet-tooltip {
    background: transparent;
    border: none;
    box-shadow: none;
  }
  
  .leaflet-tooltip-top:before {
    border-top-color: rgba(0, 0, 0, 0.8);
  }
</style>