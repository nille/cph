---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all places and render content to extract descriptions
const allPlaces = await getCollection('places');
const placeRecommendations = await Promise.all(
  allPlaces.map(async (place) => {
    const { Content } = await place.render();
    return { ...place, Content };
  })
);
---

<BaseLayout title="Favourite places - My Copenhagen" description="Curated places in Copenhagen: cafés, restaurants, museums, parks, and unique spots">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 py-20">
    <!-- Header -->
    <header class="text-center mb-20">
      <h1 class="text-h1 text-gray-900 mb-6 font-serif">Favourite places</h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed">
        Cafés, restaurants, museums, parks, and unique spots that capture the essence of Copenhagen.
      </p>
      <div class="flex items-center justify-center mt-12">
        <div class="h-px bg-gradient-to-r from-transparent via-gray-300 to-transparent w-32"></div>
        <div class="mx-6 text-gray-400">
          <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
          </svg>
        </div>
        <div class="h-px bg-gradient-to-r from-transparent via-gray-300 to-transparent w-32"></div>
      </div>
    </header>

    <!-- Places Grid -->
    <div class="space-y-10">
      {placeRecommendations.map((place) => (
        <article class="group relative bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-lg hover:border-gray-200 transition-all duration-300">
          <div class="grid grid-cols-1 lg:grid-cols-5 gap-0">
            {/* Image Section */}
            <div class="col-span-1 lg:col-span-2 relative h-64 lg:h-auto overflow-hidden">
              <a href={`/places/${place.slug}`} class="block w-full h-full">
                {place.data.images && place.data.images.length > 0 ? (
                  <img 
                    src={place.data.images[0].startsWith('/') ? place.data.images[0] : `/images/places/${place.data.images[0]}`} 
                    alt={place.data.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                    </svg>
                  </div>
                )}
                <div class="absolute inset-0 bg-gradient-to-t from-black/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </a>
            </div>
            
            {/* Content Section */}
            <div class="col-span-1 lg:col-span-3 p-6 sm:p-8 lg:p-10 flex flex-col justify-center">
              <div class="space-y-6">
                <div>
                  <h2 class="text-h2 text-gray-900 mb-3 font-serif leading-tight">
                    <a href={`/places/${place.slug}`} class="hover:text-[#F05340] transition-colors duration-200">
                      {place.data.title}
                    </a>
                  </h2>
                  
                  <p class="text-lg text-gray-600 leading-relaxed mb-4">
                    {place.data.subtitle}
                  </p>
                  
                  {/* Tags */}
                  {place.data.tags && place.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2 mb-6">
                      {place.data.tags.slice(0, 4).map((tag: string) => (
                        <span class="px-3 py-1.5 bg-gray-100 text-gray-700 rounded-full text-sm font-medium hover:bg-gray-200 transition-colors">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
                
                {/* Location */}
                <div class="flex items-center text-gray-500 space-x-2">
                  <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                  </svg>
                  <span class="text-base">{place.data.address}</span>
                  {place.data.neighborhood && (
                    <>
                      <span class="text-gray-300">•</span>
                      <span class="text-base">{place.data.neighborhood}</span>
                    </>
                  )}
                </div>
                
                {/* Call to Action */}
                <div class="flex items-center justify-between pt-4">
                  <a 
                    href={`/places/${place.slug}`}
                    class="group/cta inline-flex items-center text-[#F05340] hover:text-[#D34333] transition-colors text-lg font-medium"
                  >
                    <span class="border-b-2 border-[#F05340] group-hover/cta:border-[#D34333] transition-colors">Read more</span>
                    <svg class="w-5 h-5 ml-3 group-hover/cta:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</BaseLayout>