---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all recommendations and filter for places
const allRecommendations = await getCollection('recommendations');
const placeRecommendations = allRecommendations.filter(rec => rec.data.category === 'places');
---

<BaseLayout title="Places - My Copenhagen" description="Curated places in Copenhagen: cafés, restaurants, museums, parks, and unique spots">
  <div class="max-w-5xl mx-auto px-6 py-16">
    <!-- Header -->
    <div class="text-center mb-16">
      <h1 class="text-h1 text-gray-900 mb-4">Places</h1>
      <p class="text-body text-gray-700 max-w-3xl mx-auto">
        Cafés, restaurants, museums, parks, and unique spots that capture the essence of Copenhagen.
      </p>
      <div class="w-24 h-px bg-gray-200 mx-auto mt-8"></div>
    </div>

    <!-- Places Grid -->
    <div class="grid gap-8">
      {placeRecommendations.map((place) => (
        <article class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 hover:shadow-md hover:border-gray-300 transition-all duration-200">
          <div class="flex items-start justify-between mb-6">
            <div class="flex-1">
              <h2 class="text-h2 text-gray-900 mb-3">
                <a href={`/recommendations/${place.slug}`} class="hover:text-brand-600 transition-colors">
                  {place.data.title}
                </a>
              </h2>
              {place.data.tags && place.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-3">
                  {place.data.tags.slice(0, 3).map((tag: string) => (
                    <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-md text-body-sm font-medium">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
            <div class="flex items-center space-x-4 ml-6 flex-shrink-0">
              {place.data.price_range && (
                <span class="text-gray-500 font-medium text-body-sm">{place.data.price_range}</span>
              )}
              <div class="flex items-center space-x-1 text-accent-amber-500">
                {Array.from({ length: place.data.rating }, (_, i) => (
                  <svg key={i} class="w-4 h-4 fill-current" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                  </svg>
                ))}
              </div>
            </div>
          </div>
          
          <div class="flex items-center text-body-sm text-gray-500 mb-4 space-x-1">
            <svg class="w-4 h-4 text-gray-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
            <span>{place.data.location}</span>
            {place.data.address && <span class="text-gray-300">•</span>}
            {place.data.address && <span>{place.data.address}</span>}
            {place.data.neighborhood && <span class="text-gray-300">•</span>}
            {place.data.neighborhood && <span>{place.data.neighborhood}</span>}
          </div>
          
          <p class="text-body text-gray-700 mb-6">
            {place.data.description}
          </p>
          
          <a 
            href={`/recommendations/${place.slug}`}
            class="inline-flex items-center text-brand-600 hover:text-brand-700 transition-colors font-medium text-body"
          >
            Read more
            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
          </a>
        </article>
      ))}
    </div>
  </div>
</BaseLayout>